name: CI Rust package
on:
  workflow_call:
    inputs:
      directory:
        required: true
        type: string
      skip_run:
        required: false
        type: boolean
        default: false

jobs:
  check:
    name: Check, fmt, clippy, test and run
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./${{inputs.directory}}
    steps:
      - name: Checkout sources
        uses: actions/checkout@v4

      - name: Install rust stable toolchain
        uses: dtolnay/rust-toolchain@stable
        with:
          components: rustfmt, clippy
          toolchain: nightly-2022-09-12-x86_64-unknown-linux-gnu

      - name: Install nextest
        uses: taiki-e/install-action@v2
        with:
          tool: cargo-nextest

      - name: Cache opam packages
        uses: actions/cache@v3
        with:
          key: mina_monorepo
          path: /home/runner/.opam

      - name: Clone Mina monorepo and set commit env var
        run: |
          git clone https://github.com/lambdaclass/mina_monorepo.git
          cd mina_monorepo
          echo "MINA_COMMIT=$(git rev-parse HEAD)" >> $GITHUB_ENV
      
      - name: Cache Mina monorepo packages
        uses: actions/cache@v3
        with:
          key: mina_monorepo-${{ env.MINA_COMMIT }}
          path: /home/runner/work/mina_bridge/mina_bridge/mina_monorepo
      
      - name: Install opam
        run: sudo apt-get install opam liblmdb-dev && opam init

      - name: Set up cargo cache
        uses: Swatinem/rust-cache@v2
      
      - name: Setup Mina monorepo
        run: cd .. && sh setup.sh

      - name: Run cargo check
        run: cargo check --workspace

      - name: Run rustfmt
        run: cargo fmt --all --check

      - name: Run clippy
        run: cargo clippy --workspace --all-targets -- -D warnings

      - name: Run nextest
        run: cargo nextest run --workspace --all-targets --no-fail-fast

      - name: Run binary
        if: ${{ !inputs.skip_run }}
        run: cargo run
